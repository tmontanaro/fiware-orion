# Copyright 2020 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
TextUnrestricted attribute type

--SHELL-INIT--
dbInit CB
brokerStart CB
accumulatorStart --pretty-print localhost $LISTENER_PORT

--SHELL--

#
# 01. Create entity with unrestricted text
# 02. Get the entity and see the unrestricted text
# 03. Subscribe accumulator to the entity
# 04. Dump and see the unrestricted text
#

echo '01. Create entity with unrestricted text'
echo '========================================'
payload='{
  "id": "E",
  "type": "T",
  "description": {
   "type": "TextUnrestricted",
   "value": "I'"'"'m a description (and I'"'"'m using forbidden chars)"
  }
}'
orionCurl --url /v2/entities --payload "$payload"
echo
echo


echo '02. Get the entity and see the unrestricted text'
echo '================================================'
orionCurl --url /v2/entities
echo
echo

echo '03. Subscribe accumulator to the entity'
echo '======================================='
payload='{
  "subject": {
    "entities": [
      {
        "id": "E",
        "type": "T"
      }
    ]
  },
  "notification": {
    "http": {
      "url": "http://localhost:'$LISTENER_PORT'/notify"
    }
  }
}'
orionCurl --url /v2/subscriptions --payload "$payload"
echo
echo


echo '04. Dump and see the unrestricted text'
echo '======================================'
accumulatorDump
accumulatorReset
echo
echo


--REGEXPECT--
01. Create entity with unrestricted text
========================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E?type=T
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Get the entity and see the unrestricted text
================================================
HTTP/1.1 200 OK
Content-Length: 139
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "description": {
            "metadata": {},
            "type": "TextUnrestricted",
            "value": "I'm a description (and I'm using forbidden chars)"
        },
        "id": "E",
        "type": "T"
    }
]


03. Subscribe accumulator to the entity
=======================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/subscriptions/REGEX([0-9a-f]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Dump and see the unrestricted text
======================================
POST http://localhost:REGEX(\d+)/notify
Fiware-Servicepath: /
Content-Length: 192
User-Agent: orion/REGEX(\d+\.\d+\.\d+.*)
Ngsiv2-Attrsformat: normalized
Host: localhost:REGEX(\d+)
Accept: application/json
Content-Type: application/json; charset=utf-8
Fiware-Correlator: REGEX([0-9a-f\-]{36})

{
    "data": [
        {
            "description": {
                "metadata": {},
                "type": "TextUnrestricted",
                "value": "I'm a description (and I'm using forbidden chars)"
            },
            "id": "E",
            "type": "T"
        }
    ],
    "subscriptionId": "REGEX([0-9a-f]{24})"
}
=======================================


--TEARDOWN--
brokerStop CB
accumulatorStop $LISTENER_PORT
dbDrop CB
